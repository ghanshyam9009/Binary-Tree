#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

int levelLeaf(TreeNode<int> *root) 
{
     if(root==NULL)  return false;

        queue<TreeNode<int>*>q;
        q.push(root);
        unordered_set<int>s;
        int level=0;

        while(q.empty()==false)
        {
             int ct=q.size();
             for (int i=0; i<ct; i++)
            {
                TreeNode<int> *curr = q.front();
                q.pop();
                // storing level of every leaf node
                if (curr->left == NULL and curr->right == NULL)
                    s.insert(level);

                if (curr->left!=NULL)
                    q.push(curr->left);
                if (curr->right!=NULL)
                    q.push(curr->right);
            }
           level++;
        }
        return (s.size() == 1);
}




// bool check(TreeNode<int>*root,int level, int&leaflevel){

//     if(root == NULL){
//         return true;
//     }

//     if(root->left == NULL && root->right == NULL){
//         if(leaflevel == -1 ){
//             leaflevel = level;

//         }else if(leaflevel != level){
//             return false;
//         }
//     }

//     bool left = check(root->left,level+1,leaflevel);
//     bool right = check(root->right,level+1,leaflevel);
//     return left&&right;
// }

// int levelLeaf(TreeNode<int> *root) {
//     int leaflevel = -1;
//     return  check(root,0,leaflevel);
// }
