/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
     bool isSameTree(TreeNode* p, TreeNode* q) {
        if(p == NULL && q == NULL)
        {
            return true;
        }
        if(p == nullptr || q == nullptr)  
        {
            return false;
        }
        if(p->val == q->val)
        {
            return isSameTree(p->left,q->right) && isSameTree(p->right,q->left);
        }
        return false;
    }
class Solution {
public:

    bool isSymmetric(TreeNode* root) {
        if(root==nullptr)return false;
        if(root->left==nullptr&&root->right==nullptr)return true;
        if(root->left==nullptr||root->right==nullptr)return false;
        
        return isSameTree(root->left,root->right);
    }
};
