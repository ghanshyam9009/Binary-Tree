#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

BinaryTreeNode<int>* solve(BinaryTreeNode<int> *root, int targetNodeVal, int &k)
{
    if(root == NULL)
    {
        return NULL;
    }

    if(root->data == targetNodeVal)
    {
        return root;
    }

    BinaryTreeNode<int> * leftAns = solve(root->left , targetNodeVal,k);
    BinaryTreeNode<int> * rightAns = solve(root->right,targetNodeVal,k);

    if(leftAns!= NULL && rightAns==NULL)
    {
        k--;    
        if(k<=0)
        {
            k=INT_MAX;
            return root;
        }
        return leftAns;
    }

    if(leftAns == NULL && rightAns!=NULL)
    {
        k--;
        if(k<=0)
        {
            k=INT_MAX;
            return root;
        }
        return rightAns;
    }
    return NULL;
}

 

int findKthAncestor(BinaryTreeNode<int> *root, int targetNodeVal, int k) {

    BinaryTreeNode<int>* ans = solve(root,targetNodeVal,k);
    if(ans==NULL || ans->data==targetNodeVal)
    {
        return -1;
    }

    else
        return ans->data;
}

 


