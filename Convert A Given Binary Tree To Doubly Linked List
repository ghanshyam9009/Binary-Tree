
void solve(BinaryTreeNode<int>* root,BinaryTreeNode<int>* &prev1,BinaryTreeNode<int>* &head)
{
    if(!root) return;
    solve(root->left,prev1,head);

    if(prev1==NULL) {
        head = root;
    }
    else {
        root->left = prev1;
        prev1->right = root;
    }
    prev1 = root;

    solve(root->right,prev1,head);
}


BinaryTreeNode<int>* BTtoDLL(BinaryTreeNode<int>* root) {
    // Write your code here
    BinaryTreeNode<int>* head = NULL;
    BinaryTreeNode<int>* prev1 = NULL;
    solve(root,prev1,head);
    return head;
}


// approach 2

class Solution
{
    public: 
    //Function to convert binary tree to doubly linked list and return it.
    Node* tail=NULL;
    Node * bToDLL(Node *root)
    {
        if(root==NULL){
            return root;
        }
        Node* head=bToDLL(root->left);
        if(tail==NULL){
            head=root;
            tail=head;
        }
        else{
            tail->right=root;
            root->left=tail;
            tail=root;
        }
        bToDLL(root->right);
        return head;
    }
