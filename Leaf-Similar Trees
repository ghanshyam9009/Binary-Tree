Input: 
root1 = [3,5,1,6,2,9,8,null,null,7,4], 
root2 = [3,5,1,6,7,4,2,null,null,null,null,null,null,9,8]

Output: true



class Solution {
public:

    void get_leaves(TreeNode *root, vector<int> &leaves)
    {
        if (!root)
            return; 
        if (!root->left && !root->right){
            leaves.push_back(root->val); 
            return;
        }
        // get left leaves
        get_leaves(root->left,leaves);
        // get right leaves
        get_leaves(root->right,leaves);
    }

    bool leafSimilar(TreeNode *root1, TreeNode *root2)
    {
    
        vector<int> root1Leaves;
        vector<int> root2Leaves;
        get_leaves(root1, root1Leaves);
        get_leaves(root2, root2Leaves);
        if (root1Leaves.size() != root2Leaves.size())
            return false;
        else {
            int sz = root1Leaves.size(); 
            for (int i = 0; i < sz ; i ++)
                if(root1Leaves[i] != root2Leaves[i])
                    return false; 
        }
        return true; 
    }
};
