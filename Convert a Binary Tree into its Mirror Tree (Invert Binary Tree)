void mirrorTree(BinaryTreeNode<int> *root) {

    if (root == nullptr)

        return;

    mirrorTree(root->left);
    mirrorTree(root->right);

     swap(root->left , root->right);

}


// approach 2 iterative

void mirror(Node* root)
{
    if (root == NULL)
        return;
 
    queue<Node*> q;
    q.push(root);

    while (!q.empty()) {
        
        Node* curr = q.front();
        q.pop()

        swap(curr->left, curr->right);

        if (curr->left)
            q.push(curr->left);
        if (curr->right)
            q.push(curr->right);
    }
}
