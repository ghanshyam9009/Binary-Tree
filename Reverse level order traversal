/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> nodes;
        if(!root) return nodes;
        queue<TreeNode*> q;
        stack<vector<int>> st;
        q.push(root);
        while(!q.empty()){
            int x = q.size();
            vector<int> node;
            while(x--){
                root = q.front();
                q.pop();
                node.push_back(root->val);
                if(root->left) q.push(root->left);
                if(root->right) q.push(root->right);
            }
            st.push(node);
        }
        while(!st.empty()){
            nodes.push_back(st.top());
            st.pop();
        }
        return nodes;
    }

};
